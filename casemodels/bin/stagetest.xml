<definitions xmlns="http://www.omg.org/spec/CMMN/20151109/MODEL" xmlns:cafienne="org.cafienne">
    <caseFileItemDefinition name="Greeting" definitionType="http://www.omg.org/spec/CMMN/DefinitionType/Unspecified" id="greeting.cfid">
        <property name="Message" type="http://www.omg.org/spec/CMMN/PropertyType/string">
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" isBusinessIdentifier="true"/>
            </extensionElements>
        </property>
        <property name="To" type="http://www.omg.org/spec/CMMN/PropertyType/string">
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" isBusinessIdentifier="true"/>
            </extensionElements>
        </property>
        <property name="From" type="http://www.omg.org/spec/CMMN/PropertyType/string"/>
    </caseFileItemDefinition>
    <caseFileItemDefinition name="Response" definitionType="http://www.omg.org/spec/CMMN/DefinitionType/Unspecified" id="response.cfid">
        <property name="Message" type="http://www.omg.org/spec/CMMN/PropertyType/string"/>
        <property name="Date" type="http://www.omg.org/spec/CMMN/PropertyType/date"/>
        <property name="Time" type="http://www.omg.org/spec/CMMN/PropertyType/time"/>
        <property name="SomeBoolean" type="http://www.omg.org/spec/CMMN/PropertyType/boolean"/>
    </caseFileItemDefinition>
    <case id="stagetest.case" name="stagetest" expressionLanguage="spel">
        <caseFileModel>
            <caseFileItem id="_ZCK2p_17" name="Greeting" multiplicity="ExactlyOne" definitionRef="greeting.cfid"/>
            <caseFileItem id="_ZCK2p_18" name="Response" multiplicity="ExactlyOne" definitionRef="response.cfid"/>
        </caseFileModel>
        <casePlanModel id="cm__ZCK2p_0" name="stagetest" autoComplete="true">
            <planItem id="pi__ZCK2p_0" name="Stage" definitionRef="_ZCK2p_0">
                <entryCriterion id="_ZCK2p_15" name="EntryCriterion_2" sentryRef="s__ZCK2p_15"/>
                <entryCriterion id="_ZCK2p_25" name="EntryCriterion_3" sentryRef="s__ZCK2p_25"/>
                <exitCriterion id="_ZCK2p_52" name="ExitCriterion_3" sentryRef="s__ZCK2p_52"/>
                <itemControl id="_ZCK2p_1">
                    <repetitionRule id="_ZCK2p_3">
                        <condition id="_ZCK2p_4">
                            <body>
                                <![CDATA[true]]>
                            </body>
                        </condition>
                    </repetitionRule>
                </itemControl>
            </planItem>
            <planItem id="pi_ms__ZCK2p_0" name="Left" definitionRef="ms__ZCK2p_0">
                <entryCriterion id="_ZCK2p_10" name="EntryCriterion_0" sentryRef="s__ZCK2p_10"/>
                <itemControl id="_ZCK2p_5">
                    <repetitionRule id="_ZCK2p_41">
                        <condition id="_ZCK2p_42">
                            <body>
                                <![CDATA[true]]>
                            </body>
                        </condition>
                    </repetitionRule>
                </itemControl>
            </planItem>
            <planItem id="pi_ms__ZCK2p_1" name="Right" definitionRef="ms__ZCK2p_1">
                <entryCriterion id="_ZCK2p_13" name="EntryCriterion_1" sentryRef="s__ZCK2p_13"/>
                <itemControl id="_ZCK2p_12">
                    <requiredRule id="_ZCK2p_28">
                        <condition id="_ZCK2p_29">
                            <body>
                                <![CDATA[true]]>
                            </body>
                        </condition>
                    </requiredRule>
                </itemControl>
            </planItem>
            <planItem id="pi__ZCK2p_30" name="Stage (Termination Should Kill One Task)" definitionRef="_ZCK2p_30">
                <exitCriterion id="_ZCK2p_35" name="ExitCriterion_1" sentryRef="s__ZCK2p_35"/>
            </planItem>
            <planItem id="pi__ZCK2p_39" name="Stage (Termination Should Kill Many Tasks)" definitionRef="_ZCK2p_39">
                <exitCriterion id="_ZCK2p_50" name="ExitCriterion_2" sentryRef="s__ZCK2p_50"/>
            </planItem>
            <sentry id="s__ZCK2p_15">
                <planItemOnPart id="_ZCK2p_16" sourceRef="pi_ms__ZCK2p_0">
                    <standardEvent>occur</standardEvent>
                </planItemOnPart>
            </sentry>
            <sentry id="s__ZCK2p_25">
                <caseFileItemOnPart id="_ZCK2p_26" sourceRef="_ZCK2p_17">
                    <standardEvent>create</standardEvent>
                </caseFileItemOnPart>
            </sentry>
            <sentry id="s__ZCK2p_52">
                <planItemOnPart id="_ZCK2p_53" sourceRef="pi_ht__ZCK2p_0">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </sentry>
            <sentry id="s__ZCK2p_10">
                <ifPart id="_ZCK2p_19" contextRef="_ZCK2p_18">
                    <condition id="_ZCK2p_20">
                        <body>
                            <![CDATA[Response.Message == "Left"]]>
                        </body>
                    </condition>
                </ifPart>
                <planItemOnPart id="_ZCK2p_11" sourceRef="pi__ZCK2p_0">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </sentry>
            <sentry id="s__ZCK2p_13">
                <ifPart id="_ZCK2p_23" contextRef="_ZCK2p_18">
                    <condition id="_ZCK2p_24">
                        <body>
                            <![CDATA[Response.Message == "Right"]]>
                        </body>
                    </condition>
                </ifPart>
                <planItemOnPart id="_ZCK2p_14" sourceRef="pi__ZCK2p_0">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </sentry>
            <sentry id="s__ZCK2p_35">
                <planItemOnPart id="_ZCK2p_38" sourceRef="pi_ms__ZCK2p_1">
                    <standardEvent>occur</standardEvent>
                </planItemOnPart>
            </sentry>
            <sentry id="s__ZCK2p_50">
                <planItemOnPart id="_ZCK2p_51" sourceRef="pi_ms__ZCK2p_1">
                    <standardEvent>occur</standardEvent>
                </planItemOnPart>
            </sentry>
            <stage id="_ZCK2p_0" name="Stage" autoComplete="true">
                <planItem id="pi_ht__ZCK2p_0" name="SendResponse" definitionRef="ht__ZCK2p_0"/>
            </stage>
            <humanTask id="ht__ZCK2p_0" name="SendResponse" isBlocking="true">
                <inputs id="_ZCK2p_6" name="Greeting" bindingRef="_ZCK2p_17"/>
                <outputs id="_ZCK2p_8" name="Response" bindingRef="_ZCK2p_18"/>
                <extensionElements mustUnderstand="false">
                    <cafienne:implementation name="SendResponse" xmlns:cafienne="org.cafienne" class="org.cafienne.cmmn.definition.task.WorkflowTaskDefinition" humanTaskRef="sendresponse.humantask">
                        <documentation textFormat="text/plain">
                            <text>
                                <![CDATA[Sends a response back to the initiator of the hello world case]]>
                            </text>
                        </documentation>
                        <input id="Greeting" name="Greeting"/>
                        <output id="Response" name="Response"/>
                        <task-model>{
	"schema" : {
		"title" : "You have received a greeting",
		"type" : "object",
		"required" : [
			"Response"
		],
		"properties" : {
			"Greeting" : {
				"title" : " ",
				"type" : "object",
				"properties" : {
					"Message" : {
						"type" : "string"
					}
				}
			},
			"Response" : {
				"title" : "Your response",
				"type" : "object",
				"properties" : {
					"Message" : {
						"type" : "string",
						"title" : "Your response message"
					},
					"Date" : {
						"type" : "string",
						"format" : "date",
						"title" : "Pick a date"
					},
					"Time" : {
						"type" : "string",
						"format" : "time",
						"title" : "Pick a time"
					},
					"SomeBoolean" : {
						"type" : "boolean",
						"title" : "Check this"
					}
				}
			}
		}
	},
	"uiSchema" : {
       	"ui:order": [ "Greeting", "Response" ],
		"Greeting" : {
			"Message" : {
				"ui:widget" : "textarea",
				"ui:readonly" : true
			},
			"To" : {
				"ui:readonly" : true
			}
		},
		"Response" : {
			"Message" : {
				"ui:widget" : "textarea"
			}
		}
	}
}
</task-model>
                        <parameterMapping id="_ZCK2p_7" sourceRef="_ZCK2p_6" targetRef="Greeting"/>
                        <parameterMapping id="_ZCK2p_9" sourceRef="Response" targetRef="_ZCK2p_8"/>
                    </cafienne:implementation>
                </extensionElements>
            </humanTask>
            <milestone id="ms__ZCK2p_0" name="Left"/>
            <milestone id="ms__ZCK2p_1" name="Right"/>
            <stage id="_ZCK2p_30" name="Stage (Termination Should Kill One Task)" autoComplete="true">
                <planItem id="pi_ht__ZCK2p_2" name="Continuously Terminated Task" definitionRef="ht__ZCK2p_2">
                    <documentation textFormat="text/plain">
                        <text>
                            <![CDATA[Continuously 
Terminated 
Task]]>
                        </text>
                    </documentation>
                    <exitCriterion id="_ZCK2p_32" name="ExitCriterion_0" sentryRef="s__ZCK2p_32"/>
                    <itemControl id="_ZCK2p_33">
                        <repetitionRule id="_ZCK2p_36">
                            <condition id="_ZCK2p_37">
                                <body>
                                    <![CDATA[true]]>
                                </body>
                            </condition>
                        </repetitionRule>
                    </itemControl>
                </planItem>
                <sentry id="s__ZCK2p_32">
                    <planItemOnPart id="_ZCK2p_34" sourceRef="pi_ht__ZCK2p_0">
                        <standardEvent>complete</standardEvent>
                    </planItemOnPart>
                </sentry>
            </stage>
            <humanTask id="ht__ZCK2p_2" name="Continuously Terminated Task" isBlocking="true"/>
            <stage id="_ZCK2p_39" name="Stage (Termination Should Kill Many Tasks)" autoComplete="true">
                <planItem id="pi_ht__ZCK2p_1" name="Continuously Repeated Task" definitionRef="ht__ZCK2p_1">
                    <documentation textFormat="text/plain">
                        <text>
                            <![CDATA[Continuously
Repeated
Task]]>
                        </text>
                    </documentation>
                    <entryCriterion id="_ZCK2p_48" name="EntryCriterion_4" sentryRef="s__ZCK2p_48"/>
                    <itemControl id="_ZCK2p_45">
                        <repetitionRule id="_ZCK2p_46">
                            <condition id="_ZCK2p_47">
                                <body>
                                    <![CDATA[true]]>
                                </body>
                            </condition>
                        </repetitionRule>
                    </itemControl>
                </planItem>
                <sentry id="s__ZCK2p_48">
                    <planItemOnPart id="_ZCK2p_49" sourceRef="pi_ht__ZCK2p_0">
                        <standardEvent>complete</standardEvent>
                    </planItemOnPart>
                </sentry>
            </stage>
            <humanTask id="ht__ZCK2p_1" name="Continuously Repeated Task" isBlocking="true"/>
        </casePlanModel>
        <caseRoles/>
        <input id="_ZCK2p_21" name="Greeting" bindingRef="_ZCK2p_17"/>
    </case>
    <CMMNDI>
        <CMMNDiagram>
            <CMMNShape cmmnElementRef="cm__ZCK2p_0">
                <Bounds x="20" y="20" width="800" height="580"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi__ZCK2p_0">
                <Bounds x="110" y="100" width="520" height="200"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi_ms__ZCK2p_0">
                <Bounds x="250" y="340" width="100" height="40"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi_ht__ZCK2p_0">
                <Bounds x="170" y="140" width="140" height="80"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_10">
                <Bounds x="292" y="330" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi_ms__ZCK2p_1">
                <Bounds x="410" y="340" width="100" height="40"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_13">
                <Bounds x="454" y="330" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_15">
                <Bounds x="104" y="220" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_25">
                <Bounds x="624" y="130" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi_ht__ZCK2p_2">
                <Bounds x="142" y="470" width="140" height="80"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi__ZCK2p_30">
                <Bounds x="92" y="430" width="330" height="140"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_32">
                <Bounds x="206" y="460" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_35">
                <Bounds x="356" y="420" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi__ZCK2p_39">
                <Bounds x="450" y="430" width="340" height="140"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi_ht__ZCK2p_1">
                <Bounds x="530" y="470" width="140" height="80"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_48">
                <Bounds x="584" y="460" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_50">
                <Bounds x="554" y="420" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_52">
                <Bounds x="254" y="290" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_ZCK2p_17">
                <Bounds x="720" y="110" width="25" height="40"/>
            </CMMNShape>
            <CMMNEdge sourceCMMNElementRef="pi__ZCK2p_0" targetCMMNElementRef="_ZCK2p_10"/>
            <CMMNEdge sourceCMMNElementRef="pi__ZCK2p_0" targetCMMNElementRef="_ZCK2p_13"/>
            <CMMNEdge sourceCMMNElementRef="pi_ms__ZCK2p_0" targetCMMNElementRef="_ZCK2p_15">
                <waypoint x="60" y="360"/>
                <waypoint x="60" y="230"/>
            </CMMNEdge>
            <CMMNEdge sourceCMMNElementRef="_ZCK2p_17" targetCMMNElementRef="_ZCK2p_25"/>
            <CMMNEdge sourceCMMNElementRef="pi_ht__ZCK2p_0" targetCMMNElementRef="_ZCK2p_32"/>
            <CMMNEdge sourceCMMNElementRef="pi_ms__ZCK2p_1" targetCMMNElementRef="_ZCK2p_35"/>
            <CMMNEdge sourceCMMNElementRef="pi_ht__ZCK2p_0" targetCMMNElementRef="_ZCK2p_48">
                <waypoint x="590" y="330"/>
            </CMMNEdge>
            <CMMNEdge sourceCMMNElementRef="pi_ms__ZCK2p_1" targetCMMNElementRef="_ZCK2p_50"/>
            <CMMNEdge sourceCMMNElementRef="pi_ht__ZCK2p_0" targetCMMNElementRef="_ZCK2p_52"/>
        </CMMNDiagram>
    </CMMNDI>
</definitions>
