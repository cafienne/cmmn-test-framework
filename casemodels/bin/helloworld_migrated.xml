<definitions>
    <caseFileItemDefinition name="Greeting" definitionType="http://www.omg.org/spec/CMMN/DefinitionType/Unspecified" id="greeting.cfid">
        <property name="Message" type="http://www.omg.org/spec/CMMN/PropertyType/string">
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" isBusinessIdentifier="true"/>
            </extensionElements>
        </property>
        <property name="To" type="http://www.omg.org/spec/CMMN/PropertyType/string"/>
        <property name="From" type="http://www.omg.org/spec/CMMN/PropertyType/string">
            <extensionElements mustUnderstand="false">
                <cafienne:implementation xmlns:cafienne="org.cafienne" isBusinessIdentifier="true"/>
            </extensionElements>
        </property>
    </caseFileItemDefinition>
    <caseFileItemDefinition name="Response" definitionType="http://www.omg.org/spec/CMMN/DefinitionType/Unspecified" id="response.cfid">
        <property name="Message" type="http://www.omg.org/spec/CMMN/PropertyType/string"/>
        <property name="Date" type="http://www.omg.org/spec/CMMN/PropertyType/date"/>
        <property name="Time" type="http://www.omg.org/spec/CMMN/PropertyType/time"/>
        <property name="SomeBoolean" type="http://www.omg.org/spec/CMMN/PropertyType/boolean"/>
    </caseFileItemDefinition>
    <case id="helloworld_base.case" name="HelloWorld_Migrated" expressionLanguage="spel">
        <documentation textFormat="text/plain">
            <text>
                <![CDATA[Hello World]]>
            </text>
        </documentation>
        <caseFileModel>
            <caseFileItem id="cfi_csVQy_0" name="Greetings" multiplicity="ExactlyOne" definitionRef="greeting.cfid"/>
            <caseFileItem id="cfi_csVQy_1" name="Response" multiplicity="ExactlyOne" definitionRef="response.cfid"/>
        </caseFileModel>
        <casePlanModel id="cm_HelloWorld.case_HelloWorld_0" name="HelloWorld_Migrated" autoComplete="true">
            <planItem id="cm_csVQy_167" name="Receive Greeting and Send response" definitionRef="pid_cm_csVQy_167">
                <documentation textFormat="text/plain">
                    <text>
                        <![CDATA[Receive Greeting
and Send response]]>
                    </text>
                </documentation>
                <itemControl id="_nTPPc_1">
                    <repetitionRule id="_nTPPc_5">
                        <condition id="_nTPPc_7">
                            <body>
                                <![CDATA[true]]>
                            </body>
                        </condition>
                    </repetitionRule>
                    <requiredRule id="_nTPPc_16">
                        <condition id="_nTPPc_17">
                            <body>
                                <![CDATA[task.index < 2]]>
                            </body>
                        </condition>
                    </requiredRule>
                </itemControl>
            </planItem>
            <planItem id="cm_cs3hg_196" name="Read response" definitionRef="pid_cm_cs3hg_196">
                <entryCriterion id="_nTPPc_0" name="EntryCriterion_0" sentryRef="cm_cs3hg_198"/>
                <itemControl id="_nTPPc_2">
                    <repetitionRule id="_nTPPc_18">
                        <condition id="_nTPPc_19">
                            <body>
                                <![CDATA[true]]>
                            </body>
                        </condition>
                    </repetitionRule>
                </itemControl>
            </planItem>
            <planItem id="pi_ht__nTPPc_0" name="New Task!" definitionRef="ht__nTPPc_0"/>
            <planItem id="pi_ht__nTPPc_1" name="Task that can go" definitionRef="ht__nTPPc_1">
                <entryCriterion id="_nTPPc_20" name="EntryCriterion_1" sentryRef="crit__nTPPc_0"/>
            </planItem>
            <sentry id="cm_cs3hg_198">
                <planItemOnPart id="ref_id_cm_csVQy_167" sourceRef="cm_csVQy_167">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </sentry>
            <sentry id="crit__nTPPc_0">
                <planItemOnPart id="_nTPPc_21" sourceRef="cm_csVQy_167">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </sentry>
            <humanTask id="pid_cm_csVQy_167" name="Receive Greeting and Send response" isBlocking="true">
                <inputs id="inTP_cm_cs2F1_174_1" name="Greeting" bindingRef="cfi_csVQy_0"/>
                <outputs id="outTP_cm_cs2F1_174_1" name="Response" bindingRef="cfi_csVQy_1"/>
                <extensionElements mustUnderstand="false">
                    <cafienne:implementation name="SendResponse" xmlns:cafienne="org.cafienne" class="org.cafienne.cmmn.definition.task.WorkflowTaskDefinition" humanTaskRef="sendresponse.humantask">
                        <documentation textFormat="text/plain">
                            <text>
                                <![CDATA[Sends a response back to the initiator of the hello world case]]>
                            </text>
                        </documentation>
                        <input id="Greeting" name="Greeting"/>
                        <output id="Response" name="Response"/>
                        <task-model>{
	"schema" : {
		"title" : "You have received a greeting",
		"type" : "object",
		"required" : [
			"Response"
		],
		"properties" : {
			"Greeting" : {
				"title" : " ",
				"type" : "object",
				"properties" : {
					"Message" : {
						"type" : "string"
					}
				}
			},
			"Response" : {
				"title" : "Your response",
				"type" : "object",
				"properties" : {
					"Message" : {
						"type" : "string",
						"title" : "Your response message"
					},
					"Date" : {
						"type" : "string",
						"format" : "date",
						"title" : "Pick a date"
					},
					"Time" : {
						"type" : "string",
						"format" : "time",
						"title" : "Pick a time"
					},
					"SomeBoolean" : {
						"type" : "boolean",
						"title" : "Check this"
					}
				}
			}
		}
	},
	"uiSchema" : {
       	"ui:order": [ "Greeting", "Response" ],
		"Greeting" : {
			"Message" : {
				"ui:widget" : "textarea",
				"ui:readonly" : true
			},
			"To" : {
				"ui:readonly" : true
			}
		},
		"Response" : {
			"Message" : {
				"ui:widget" : "textarea"
			}
		}
	}
}
</task-model>
                        <duedate id="_nTPPc_9">
                            <condition id="_nTPPc_10">
                                <body>
                                    <![CDATA[T(java.time.Instant).now()]]>
                                </body>
                            </condition>
                        </duedate>
                        <assignment id="_nTPPc_3" contextRef="cfi_csVQy_0">
                            <condition id="_nTPPc_4">
                                <body>
                                    <![CDATA[Greeting.To]]>
                                </body>
                            </condition>
                        </assignment>
                        <parameterMapping id="inPM_cm_cshJq_4_0" sourceRef="inTP_cm_cs2F1_174_1" targetRef="Greeting"/>
                        <parameterMapping id="outPM_cm_csuYs_174_0" sourceRef="Response" targetRef="outTP_cm_cs2F1_174_1">
                            <transformation id="_nTPPc_6">
                                <body>
                                    <![CDATA[map("Message", Response.Message + "IS ALWAYS EXTENDED")]]>
                                </body>
                            </transformation>
                        </parameterMapping>
                    </cafienne:implementation>
                </extensionElements>
            </humanTask>
            <humanTask id="pid_cm_cs3hg_196" name="Read response" isBlocking="true">
                <inputs id="inTP_cm_cs3hg_196_0" name="Response" bindingRef="cfi_csVQy_1"/>
                <extensionElements mustUnderstand="false">
                    <cafienne:implementation name="ReadRespose" xmlns:cafienne="org.cafienne" class="org.cafienne.cmmn.definition.task.WorkflowTaskDefinition" humanTaskRef="readresponse.humantask">
                        <documentation textFormat="text/plain">
                            <text>
                                <![CDATA[Read Response]]>
                            </text>
                        </documentation>
                        <input id="Response" name="Response"/>
                        <task-model>
			{
				"schema": {
					"title": "Read response",
					"type": "object",
					"properties": {
						"Response": {
							"title": "Your response",
							"type": "object",
							"properties": {
								"Message": {
									"type": "string",
									"title": "Your response message"
								},
								"Date": {
									"type": "string",
									"format": "date",
									"title": "Pick a date"
								},
								"Time": {
									"type": "string",
									"format": "time",
									"title": "Pick a time"
								},
								"SomeBoolean": {
									"type": "boolean",
									"title": "Check this"
								}
							}
						}
					}
				},
				"uiSchema": {
					"Message": {
						"ui:widget": "textarea"
					}
				}
			}
		</task-model>
                        <duedate id="_nTPPc_14">
                            <condition id="_nTPPc_15">
                                <body>
                                    <![CDATA[T(java.time.Instant).now()]]>
                                </body>
                            </condition>
                        </duedate>
                        <assignment id="_nTPPc_12" contextRef="cfi_csVQy_0">
                            <condition id="_nTPPc_13">
                                <body>
                                    <![CDATA[Greeting.From]]>
                                </body>
                            </condition>
                        </assignment>
                        <parameterMapping id="inPM_cm_cs3hg_196_0" sourceRef="inTP_cm_cs3hg_196_0" targetRef="Response"/>
                    </cafienne:implementation>
                </extensionElements>
            </humanTask>
            <humanTask id="ht__nTPPc_0" name="New Task!" isBlocking="true"/>
            <humanTask id="ht__nTPPc_1" name="Task that can go" isBlocking="true"/>
        </casePlanModel>
        <caseRoles>
            <role id="role_csT3f_0" name="ADMIN">
                <documentation textFormat="text/plain">
                    <text>
                        <![CDATA[admin of the world]]>
                    </text>
                </documentation>
            </role>
            <role id="_nTPPc_6" name="With a decent name">
                <documentation textFormat="text/plain">
                    <text>
                        <![CDATA[for whomsoever wants it]]>
                    </text>
                </documentation>
            </role>
        </caseRoles>
        <input id="csVQy_inCPs_0" name="Greeting" bindingRef="cfi_csVQy_0"/>
        <extensionElements mustUnderstand="false">
            <cafienne:start-case-model xmlns:cafienne="org.cafienne">{
  "schema": {
    "title": "Greeting",
    "type": "object",
    "required": [
      "Greeting"
    ],
    "properties": {
      "Greeting": {
        "title": "Your greeting to the World",
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "title": "Your message"
          },
          "To": {
            "type": "string",
            "title": "To whom?"
          },
          "From": {
            "type": "string",
            "title": "From",
            "default": "$CURRENT_USER"
          }
        }
      }
    }
  },
  "uiSchema": {
    "Greeting": {
      "Message": {"ui:widget": "textarea"},
      "To" :  {"ui:widget": "user-selector", "multiSelect" : false, "role" : "Receiver"},
      "From" :  {"ui:widget": "user-selector", "multiSelect" : false, "role" : "Sender"}
    }
  }
}</cafienne:start-case-model>
        </extensionElements>
    </case>
    <CMMNDI>
        <CMMNDiagram>
            <CMMNShape cmmnElementRef="cm_HelloWorld.case_HelloWorld_0">
                <Bounds x="20" y="10" width="626" height="330"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="cm_csVQy_167">
                <Bounds x="90" y="90" width="130" height="80"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="cm_cs3hg_196">
                <Bounds x="340" y="90" width="130" height="80"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_nTPPc_0">
                <Bounds x="334" y="120" width="12" height="20"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi_ht__nTPPc_0">
                <Bounds x="120" y="210" width="140" height="80"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="pi_ht__nTPPc_1">
                <Bounds x="310" y="190" width="140" height="80"/>
            </CMMNShape>
            <CMMNShape cmmnElementRef="_nTPPc_20">
                <Bounds x="304" y="210" width="12" height="20"/>
            </CMMNShape>
            <CMMNEdge sourceCMMNElementRef="cm_csVQy_167" targetCMMNElementRef="_nTPPc_0"/>
            <CMMNEdge sourceCMMNElementRef="cm_csVQy_167" targetCMMNElementRef="_nTPPc_20"/>
        </CMMNDiagram>
    </CMMNDI>
</definitions>