<case id="entrycriteriaonrecovery.case" name="entrycriteriaonrecovery" expressionLanguage="spel" guid="_La4ud">
    <caseFileModel>
        <caseFileItem id="_La4ud_7" name="unspecified" multiplicity="ExactlyOne" definitionRef="unspecified.cfid"/>
    </caseFileModel>
    <casePlanModel id="cm__La4ud_0" name="entrycriteriaonrecovery" autoComplete="true">
        <humanTask id="pi_ht__La4ud_0" name="Task1" isBlocking="true"/>
        <humanTask id="pi_ht__La4ud_1" name="Task2" isBlocking="true"/>
        <humanTask id="pi_ht__La4ud_2" name="Task3" isBlocking="true">
            <entryCriterion id="_La4ud_3" name="EntryCriterion_0">
                <planItemOnPart id="_La4ud_4" sourceRef="pi_ht__La4ud_0">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
                <planItemOnPart id="_La4ud_5" sourceRef="pi_ht__La4ud_1">
                    <standardEvent>complete</standardEvent>
                </planItemOnPart>
            </entryCriterion>
        </humanTask>
    </casePlanModel>
    <caseRoles/>
    <textAnnotation id="_La4ud_6">
        <text>
            <![CDATA[This case can be used to test that recovery also puts the sentry network back in the proper state.

This can be done by completing the first task, then invoking force-recovery on the case, and then completing second task.

When then completing second task, the third task should become active.
]]>
        </text>
    </textAnnotation>
</case>
